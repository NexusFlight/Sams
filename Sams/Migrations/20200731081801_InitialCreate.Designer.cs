// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sams.Models;

namespace Sams.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20200731081801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Sams.Models.Address", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("DoorNumber")
                        .HasColumnType("text");

                    b.Property<string>("PostCode")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("RoadName")
                        .HasColumnType("text");

                    b.Property<string>("Town")
                        .HasColumnType("text");

                    b.HasKey("StudentID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Sams.Models.ContactDetails", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("StudentID");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("Sams.Models.ContactPreferences", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("integer");

                    b.Property<bool>("ByEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("ByLetter")
                        .HasColumnType("boolean");

                    b.Property<bool>("ByPhone")
                        .HasColumnType("boolean");

                    b.HasKey("StudentID");

                    b.ToTable("ContactPreferences");
                });

            modelBuilder.Entity("Sams.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("StudentCourseCode")
                        .HasColumnType("text");

                    b.Property<string>("StudentCourseTitle")
                        .HasColumnType("text");

                    b.Property<string>("StudentName")
                        .HasColumnType("text");

                    b.HasKey("StudentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Sams.Models.Address", b =>
                {
                    b.HasOne("Sams.Models.ContactDetails", "ContactDetails")
                        .WithOne("Address")
                        .HasForeignKey("Sams.Models.Address", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sams.Models.ContactDetails", b =>
                {
                    b.HasOne("Sams.Models.Student", "Student")
                        .WithOne("ContactDetails")
                        .HasForeignKey("Sams.Models.ContactDetails", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sams.Models.ContactPreferences", b =>
                {
                    b.HasOne("Sams.Models.Student", "Student")
                        .WithOne("ContactPreferences")
                        .HasForeignKey("Sams.Models.ContactPreferences", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
